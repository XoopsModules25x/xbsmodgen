//avoid declaring the functions repeatedly
if(defined('{UMODTAG}_BLOCK{!COUNTER}_DEFINED')) return;
/**
 * Flag to tell script it is already parsed.  If set then script is exited
 */
define('{UMODTAG}_BLOCK{!COUNTER}_DEFINED',true);

/**
 * {UMODTAG} constant definitions
 */
include_once(XOOPS_ROOT_PATH."/modules/{MODDIR}/include/defines.inc");
/**
 * {UMODTAG} function declarations
 */
include_once(XOOPS_ROOT_PATH."/modules/{MODDIR}/include/functions.inc");

/**
* Function: Create display data for block 
*
* Retrieve block configuration data and format block output
*
* @version 1
* @param array $options block config options
* @return array $block output parameters for smarty template 
*/

function b_{LMODTAG}_block{!COUNTER}_show($options) {
//set the values of $block[] so they can be put into block template
	return $block;
}

/**
* Function: Create additional data items for block admin edit form
*
* Format a mini table for block options to be included in the
* main block admin edit form.  All data field names must be 'options[]'
* and declared in the form in the order of the parameter to this function.
*
* @version 1
* @param array $options block config options
* @return array $form Output html for block config screen
*/

function b_{LMODTAG}_block{!COUNTER}_edit($options) {
	
	/*create input fields using XoopsForm objects
   	* It is clearer to use XoopsForm object->render() to create the form elements
	* rather than hand coding the html.	
	* e.g.
	if (!isset($options[0])) { $options[0] = 0; }
	$s = new XoopsFormCheckBox('', 'options[]', $options[0]);
	$s->addOption('1','Yes');
	$fld[0] = $s->render();
	unset($s);
	*/
	
	//construct the table that will be placed into the admin form
	$form = "<table>";
	$form .='<tr><td>'.'<A block language constant>'.'</td><td>'.$fld[0].'</td></tr>';
	$form .= "</table>";
	return $form;
}
